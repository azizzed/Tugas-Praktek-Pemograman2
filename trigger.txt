CREATE DATABASE pembelian
CREATE table Barang
(BAR_ID int not null,BAR_NAMA VARCHAR(255) not null,BAR_STOCK int null DEFAULT 0,
CONSTRAINT PK_BARANG primary key (BAR_ID))

create table pembelian
(PEM_ID int not null,BAR_ID int not null,
PEM_JUMLAH int not null,
constraint PK_PEMBELIAN primary key (PEM_ID))

alter table pembelian
add constraint FK_PEMBELIAN_RELATION_BARANG FOREIGN KEY (BAR_ID) REFERENCES BARANG (BAR_ID)

INSERT INTO BARANG (BAR_ID,BAR_NAMA) VALUES (1,'AQUA');
INSERT INTO BARANG (BAR_ID,BAR_NAMA) VALUES (2,'TOTAL');
INSERT INTO BARANG (BAR_ID,BAR_NAMA) VALUES (3,'AQUADES');

CREATE TRIGGER TAMBAHSTOCKBARANG AFTER INSERT ON PEMBELIAN FOR EACH ROW
UPDATE BARANG SET BAR_STOCK = BAR_STOCK + NEW.PEM_JUMLAH WHERE BARANG.BAR_ID = NEW.BAR_ID 

INSERT INTO PEMBELIAN (PEM_ID,BAR_ID,PEM_JUMLAH) VALUES(1,1,4);
INSERT INTO PEMBELIAN (PEM_ID,BAR_ID,PEM_JUMLAH) VALUES(2,3,2);
INSERT INTO PEMBELIAN (PEM_ID,BAR_ID,PEM_JUMLAH) VALUES(3,1,1);
 SELECT * FROM BARANG
SELECT * FROM PEMBELIAN

CREATE TABLE PENJUALAN
(ID_PENJUALAN INT NOT NULL,BAR_ID INT NOT NULL,QTY_JUAL INT NOT NULL,
CONSTRAINT PK_PENJUALAN PRIMARY KEY (ID_PENJUALAN))

CREATE TRIGGER KURANGSTOCKBARANG AFTER INSERT ON PENJUALAN FOR EACH ROW
UPDATE BARANG SET BAR_STOCK = BAR_STOCK - NEW.QTY_JUAL WHERE BARANG.BAR_ID = NEW.BAR_ID 

alter table PENJUALAN
add constraint PK_PENJUALAN_RELATION_BARANG FOREIGN KEY (BAR_ID) REFERENCES BARANG (BAR_ID)

select * from penjualan
SELECT * FROM BARANG
insert into penjualan (ID_PENJUALAN,BAR_ID,QTY_JUAL) VALUES(1,1,1);
INSERT INTO penjualan (ID_PENJUALAN,BAR_ID,QTY_JUAL) VALUES(2,2,1);
DELETE FROM penjualan


CREATE PROCEDURE tampilPEMBELIAN ()
BEGIN
select * from pembelian;
END

CREATE PROCEDURE insertPEMBELIAN
(vPEM_ID INT ,
vBAR_ID INT,
vPEM_JUMLAH INT)
BEGIN
insert into PEMBELIAN (PEM_ID,BAR_ID,PEM_JUMLAH) values(vPEM_ID,VBAR_ID,VPEM_JUMLAH);
END

CALL INSERTPEMBELIAN (5,2,3);
CALL TAMPILPEMBELIAN

CREATE PROCEDURE INSERTPENJUALAN
(VID_PENJUALAN INT, VBAR_ID INT, VQTY_JUAL INT)
BEGIN
INSERT INTO PENJUALAN (ID_PENJUALAN,BAR_ID,QTY_JUAL) VALUES(VID_PENJUALAN,VBAR_ID,VQTY_JUAL);
END

SELECT * FROM BARANG
CALL INSERTPENJUALAN (4,2,1)